// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkerSchedulingApp.Models;

namespace WorkerSchedulingApp.Migrations
{
    [DbContext(typeof(WorkScheduleContext))]
    partial class WorkScheduleContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WorkerSchedulingApp.Models.Day", b =>
                {
                    b.Property<int>("DayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("DayId");

                    b.ToTable("Days");

                    b.HasData(
                        new
                        {
                            DayId = 1,
                            Name = "Monday"
                        },
                        new
                        {
                            DayId = 2,
                            Name = "Tuesday"
                        },
                        new
                        {
                            DayId = 3,
                            Name = "Wednesday"
                        },
                        new
                        {
                            DayId = 4,
                            Name = "Thursday"
                        },
                        new
                        {
                            DayId = 5,
                            Name = "Friday"
                        },
                        new
                        {
                            DayId = 6,
                            Name = "Saturday"
                        },
                        new
                        {
                            DayId = 7,
                            Name = "Sunday"
                        });
                });

            modelBuilder.Entity("WorkerSchedulingApp.Models.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DayId")
                        .HasColumnType("int");

                    b.Property<int?>("HoursPerShift")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("MilitaryTime")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<int>("WorkerId")
                        .HasColumnType("int");

                    b.HasKey("PositionId");

                    b.HasIndex("DayId");

                    b.HasIndex("WorkerId");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            PositionId = 1,
                            DayId = 1,
                            HoursPerShift = 10,
                            MilitaryTime = "0900",
                            PositionName = "Brewer",
                            WorkerId = 1
                        },
                        new
                        {
                            PositionId = 2,
                            DayId = 2,
                            HoursPerShift = 12,
                            MilitaryTime = "0900",
                            PositionName = "Brewer",
                            WorkerId = 1
                        },
                        new
                        {
                            PositionId = 3,
                            DayId = 3,
                            HoursPerShift = 10,
                            MilitaryTime = "0800",
                            PositionName = "Brewer",
                            WorkerId = 1
                        },
                        new
                        {
                            PositionId = 4,
                            DayId = 6,
                            HoursPerShift = 8,
                            MilitaryTime = "0900",
                            PositionName = "Brewer",
                            WorkerId = 1
                        },
                        new
                        {
                            PositionId = 5,
                            DayId = 1,
                            HoursPerShift = 10,
                            MilitaryTime = "1200",
                            PositionName = "Salesman",
                            WorkerId = 2
                        },
                        new
                        {
                            PositionId = 6,
                            DayId = 3,
                            HoursPerShift = 10,
                            MilitaryTime = "1000",
                            PositionName = "Salesman",
                            WorkerId = 2
                        },
                        new
                        {
                            PositionId = 7,
                            DayId = 6,
                            HoursPerShift = 10,
                            MilitaryTime = "1100",
                            PositionName = "Salesman",
                            WorkerId = 2
                        },
                        new
                        {
                            PositionId = 8,
                            DayId = 7,
                            HoursPerShift = 6,
                            MilitaryTime = "0900",
                            PositionName = "Salesman",
                            WorkerId = 2
                        },
                        new
                        {
                            PositionId = 9,
                            DayId = 2,
                            HoursPerShift = 6,
                            MilitaryTime = "1600",
                            PositionName = "Bartender",
                            WorkerId = 3
                        },
                        new
                        {
                            PositionId = 10,
                            DayId = 3,
                            HoursPerShift = 6,
                            MilitaryTime = "1600",
                            PositionName = "Bartender",
                            WorkerId = 3
                        },
                        new
                        {
                            PositionId = 11,
                            DayId = 4,
                            HoursPerShift = 6,
                            MilitaryTime = "1600",
                            PositionName = "Bartender",
                            WorkerId = 3
                        },
                        new
                        {
                            PositionId = 12,
                            DayId = 5,
                            HoursPerShift = 6,
                            MilitaryTime = "1200",
                            PositionName = "Bartender",
                            WorkerId = 3
                        },
                        new
                        {
                            PositionId = 13,
                            DayId = 6,
                            HoursPerShift = 6,
                            MilitaryTime = "1200",
                            PositionName = "Bartender",
                            WorkerId = 3
                        },
                        new
                        {
                            PositionId = 14,
                            DayId = 2,
                            HoursPerShift = 6,
                            MilitaryTime = "0800",
                            PositionName = "Janitor",
                            WorkerId = 4
                        },
                        new
                        {
                            PositionId = 15,
                            DayId = 4,
                            HoursPerShift = 8,
                            MilitaryTime = "1300",
                            PositionName = "Janitor",
                            WorkerId = 4
                        },
                        new
                        {
                            PositionId = 16,
                            DayId = 7,
                            HoursPerShift = 8,
                            MilitaryTime = "1000",
                            PositionName = "Janitor",
                            WorkerId = 4
                        });
                });

            modelBuilder.Entity("WorkerSchedulingApp.Models.Worker", b =>
                {
                    b.Property<int>("WorkerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("WorkerId");

                    b.ToTable("Workers");

                    b.HasData(
                        new
                        {
                            WorkerId = 1,
                            FirstName = "Colby",
                            LastName = "Boell"
                        },
                        new
                        {
                            WorkerId = 2,
                            FirstName = "Asa",
                            LastName = "Hoffman"
                        },
                        new
                        {
                            WorkerId = 3,
                            FirstName = "Joe",
                            LastName = "Hanson"
                        },
                        new
                        {
                            WorkerId = 4,
                            FirstName = "Jon",
                            LastName = "Crook"
                        });
                });

            modelBuilder.Entity("WorkerSchedulingApp.Models.Position", b =>
                {
                    b.HasOne("WorkerSchedulingApp.Models.Day", "Day")
                        .WithMany("Positions")
                        .HasForeignKey("DayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkerSchedulingApp.Models.Worker", "Worker")
                        .WithMany("Positions")
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Day");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("WorkerSchedulingApp.Models.Day", b =>
                {
                    b.Navigation("Positions");
                });

            modelBuilder.Entity("WorkerSchedulingApp.Models.Worker", b =>
                {
                    b.Navigation("Positions");
                });
#pragma warning restore 612, 618
        }
    }
}
